<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="memberDAO">

	<select id="friendList" parameterType="String"
		resultMap="friendRs">
		SELECT
		*
		FROM friend
		WHERE myName = #{name} or friendName =
		#{name}
	</select>
	<select id="selectEmail" parameterType="String"
		resultType="memberDTO">
		select email from member where id = #{id}
	</select>
	<select id="isFriend" parameterType="FriendDTO" resultType="int">
		select count(*) from friend where
		(myName = #{myName} and friendName = #{friendName})
		or
		(myName = #{friendName}
		and friendName = #{myName})
	</select>
	<insert id="addFriend" parameterType="friendDTO">
		INSERT INTO friend
		VALUES(#{myName},#{friendName},#{myId},#{friendId},#{auth})
	</insert>

	<update id="updateFriend" parameterType="friendDTO">
		UPDATE friend
		SET auth=#{auth} WHERE myName = #{myName} and friendName = #{friendName}
	</update>

	<delete id="deleteFriend" parameterType="friendDTO">
		DELETE FROM friend WHERE
		(myName = #{myName} and friendName = #{friendName})
		or
		(myName =
		#{friendName} and friendName = #{myName})
	</delete>
	<resultMap type="friendDTO" id="friendRs">
		<result property="myName" column="myName" />
		<result property="friendName" column="friendName" />
		<result property="myId" column="myId" />
		<result property="friendId" column="friendId" />
		<result property="auth" column="auth" />
	</resultMap>
	<resultMap type="memberDTO" id="rsMap">
		<result property="id" column="id" />
		<result property="pw" column="pw" />
		<result property="name" column="name" />
		<result property="tel" column="tel" />
		<result property="email" column="email" />
		<result property="birth" column="birth" />
		<result property="authkey" column="authkey" />
		<result property="roadaddr" column="roadaddr" />
		<result property="totaddr" column="totaddr" />
		<result property="travel_theme" column="travel_theme" />
		<result property="thumb" column="thumb" />
	</resultMap>

	<select id="select" parameterType="String" resultType="memberDTO">
		SELECT
		*
		FROM member
		WHERE id = #{id}
	</select>

	<select id="selectCnt" parameterType="memberDTO"
		resultType="int">
		SELECT
		count(*) as cnt
		FROM member
		WHERE email = #{email} and name = #{name}
	</select>

	<select id="selectId" parameterType="memberDTO"
		resultType="memberDTO">
		SELECT
		*
		FROM member
		WHERE email = #{email} and name = #{name}
	</select>

	<select id="selectCnt2" parameterType="memberDTO"
		resultType="int">
		SELECT
		count(*) as cnt
		FROM member
		WHERE id = #{id} and name = #{name}
	</select>
	<select id="selectCnt3" parameterType="String" resultType="int">
		SELECT
		count(*) as cnt
		FROM member
		WHERE id = #{id}
	</select>

	<select id="selectPw" parameterType="memberDTO"
		resultType="memberDTO">
		SELECT
		*
		FROM member
		WHERE id = #{id} and name = #{name}
	</select>



	<select id="selectAll" resultType="String">
		SELECT id FROM member
	</select>

	<insert id="insert" parameterType="memberDTO">
		INSERT INTO member
		VALUES(#{id},#{pw},#{name},#{tel},#{email},#{birth},#{authkey},#{roadaddr},#{totaddr},#{travel_theme},#{thumb})
	</insert>

	<update id="update" parameterType="memberDTO">
		UPDATE member
		SET
		authkey=1
		WHERE
		id = #{id}
	</update>

	<update id="updatePw" parameterType="memberDTO">
		UPDATE member
		SET
		pw = #{pw}
		WHERE
		id = #{id}
	</update>

	<update id="updateAll" parameterType="memberDTO">
		UPDATE member
		SET
		name= #{name},
		tel= #{tel},
		email= #{email},
		birth= #{birth},
		roadaddr = #{roadaddr},
		totaddr= #{totaddr},
		travel_theme= #{travel_theme}
		WHERE
		id = #{id}
	</update>

	<delete id="delete" parameterType="String">
		DELETE FROM member WHERE
		id = #{id}
	</delete>




</mapper>
